# A tuple is an immutable sequence type in Python, used to store a collection of items. 
# Tuples are immutable, meaning once they are created, their values cannot be changed. 
# my_tuple = (1, 2, 3)

# You can create a tuple with or without parentheses. A single element tuple requires a trailing comma:
# single_element_tuple = (1,2,3)
# no_parentheses_tuple = 1, 2, 3

# Elements in a tuple can be accessed using indexing (zero-based)
# my_tuple[0]  # Outputs: 1

# operations such as concatenation, repetition, and slicing:
# new_tuple = my_tuple + (4, 5)  # Concatenation
# repeated_tuple = my_tuple * 2   # Repetition
# sliced_tuple = my_tuple[1:3]     # Slicing

# Tuple Packing and Unpacking
# Packing: Assigning multiple values to a single tuple variable. 
# packed_tuple = (1, 2, 3)
# Unpacking: Extracting values from a tuple into individual variables
# a, b, c = packed_tuple  # a=1, b=2, c=3

# Performance
# Tuples can be more memory-efficient than lists, as they have a smaller memory footprint. This can be beneficial in scenarios involving large amounts of data.
